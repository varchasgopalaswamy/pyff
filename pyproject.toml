[project]
name = "pyff"
authors = [
    {name = "Varchas Gopalaswamy", email = "varchas.gopalaswamy@gmail.com"},
]

dynamic = ["version"]

description = "A python AST scanner to see if source files are semantically different"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
classifiers = [
    "Programming Language :: Python :: 3",
]
dependencies = [
"astroid==2.0.0.dev0",
"colorama==0.3.9",
"GitPython==3.1.32",
]
[project.optional-dependencies]
CI = [
"pytest==3.6.1",
"pytest-bdd==2.21.0",
"pytest-cov==2.5.1",
"pytest-pylint==0.9.0",
"pytest-runner==4.2",
"coverage==4.5.1",
]

[build-system]
requires = ["setuptools >= 67.0.0", "setuptools_scm>=8"]
build-backend = "setuptools.build_meta"

[tool.scikit-build]
minimum-version = "build-system.requires"

[tool.setuptools_scm]
version_file = "pyff/_version.py"
parentdir_prefix_version = "pyff-"
fallback_version = "0.0.0"
version_scheme = "no-guess-dev"

[tool.setuptools.packages.find]
exclude = ["helpers*", "public*"]

[tool.pyright]
pythonVersion = "3.12"
pythonPlatform = "Linux"
stubPath = "typings"
typeCheckingMode = "basic"
reportInvalidStringEscapeSequence = "error"
reportUnusedImport = "none"
reportMissingImports = "none"
reportPrivateImportUsage = "none"
#reportInvalidTypeVarUse = "none"
#reportUnsupportedDunderAll = "none"
reportArgumentType = "none"
exclude = ["install*", "public*", "**/tests/**"]

[tool.pytest.ini_options]
testpaths = ["tests"]
markers = ["slow: marks tests as slow (deselect with '-m \"not slow\"')"]

[tool.coverage.run]
source = ["./"]

omit =  [
        "*/test*",
        "*/*__init__.py",
]

[tool.coverage.report]
skip_empty = true
exclude_also = ["if __name__ == .__main__."]

[tool.uv]
required-version = ">=0.8.4"
pip.config-settings-package = {pyff = {editable_mode="compat"}}